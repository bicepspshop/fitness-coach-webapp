#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase
"""

import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Supabase
def load_supabase_env():
    """–ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞ –¥–ª—è Supabase"""
    env_path = Path(__file__).parent / '.env.supabase'
    if env_path.exists():
        with open(env_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key.strip()] = value.strip()
        print(f"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        return True
    else:
        print(f"‚ùå –§–∞–π–ª .env.supabase –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

async def clear_all_demo_data():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase...")
    
    try:
        from shared.supabase_database import supabase_db_manager
        from sqlalchemy import text
        
        await supabase_db_manager.initialize()
        
        async with supabase_db_manager.get_session() as session:
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (–∫—Ä–æ–º–µ –±–∞–∑–æ–≤—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π)
            
            # 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            result = await session.execute(text("DELETE FROM workouts"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {result.rowcount}")
            
            # 2. –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ —Ç—Ä–µ–Ω–µ—Ä-–∫–ª–∏–µ–Ω—Ç
            result = await session.execute(text("DELETE FROM trainer_client"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å–≤—è–∑–µ–π —Ç—Ä–µ–Ω–µ—Ä-–∫–ª–∏–µ–Ω—Ç: {result.rowcount}")
            
            # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
            result = await session.execute(text("DELETE FROM clients"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {result.rowcount}")
            
            # 4. –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤
            result = await session.execute(text("DELETE FROM trainers"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–µ–Ω–µ—Ä–æ–≤: {result.rowcount}")
            
            # 5. –£–¥–∞–ª—è–µ–º –∑–∞–º–µ—Ä—ã
            result = await session.execute(text("DELETE FROM measurements"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∑–∞–º–µ—Ä–æ–≤: {result.rowcount}")
            
            # 6. –£–¥–∞–ª—è–µ–º –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
            result = await session.execute(text("DELETE FROM nutrition_plans"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è: {result.rowcount}")
            
            # 7. –£–¥–∞–ª—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
            result = await session.execute(text("DELETE FROM payments"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: {result.rowcount}")
            
            # 8. –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            result = await session.execute(text("DELETE FROM notifications"))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {result.rowcount}")
            
            # 9. –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
            result = await session.execute(text("""
                DELETE FROM exercises 
                WHERE name NOT IN ('–û—Ç–∂–∏–º–∞–Ω–∏—è', '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', '–ü–ª–∞–Ω–∫–∞')
            """))
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ª–∏—à–Ω–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {result.rowcount}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
            result = await session.execute(text("SELECT COUNT(*) FROM exercises"))
            exercises_count = result.scalar()
            print(f"‚úÖ –û—Å—Ç–∞–ª–æ—Å—å –±–∞–∑–æ–≤—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {exercises_count}")
            
        print("‚úÖ –í—Å–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ Supabase!")
        print("üöÄ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è –≤–∞—à–∏—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase")
    print("=" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not load_supabase_env():
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase:")
    print("   ‚Ä¢ –í—Å–µ—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤")
    print("   ‚Ä¢ –í—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤") 
    print("   ‚Ä¢ –í—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
    print("   ‚Ä¢ –í—Å–µ –∑–∞–º–µ—Ä—ã")
    print("   ‚Ä¢ –í—Å–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è")
    print("   ‚Ä¢ –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏")
    print("   ‚Ä¢ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("\n‚úÖ –û—Å—Ç–∞–Ω—É—Ç—Å—è —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è")
    print("\nüö´ –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!")
    
    confirm = input("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ '–î–ê' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    
    if confirm.upper() != '–î–ê':
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    success = await clear_all_demo_data()
    
    if success:
        print("\n" + "=" * 40)
        print("üéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print()
        print("‚úÖ –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("   ‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase")
        print("   ‚Ä¢ –û—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è") 
        print("   ‚Ä¢ –ë–∞–∑–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –≤–∞—à–∏—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print()
        print("üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python run_bot_supabase.py")
        print("   2. –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ /clients")
        print("   3. –°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —á–µ—Ä–µ–∑ /workouts")
        print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    else:
        print("\n‚ùå –û–ß–ò–°–¢–ö–ê –ù–ï –ó–ê–í–ï–†–®–ï–ù–ê")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    try:
        from shared.supabase_database import supabase_db_manager
        await supabase_db_manager.close()
    except:
        pass

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
